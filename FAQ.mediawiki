=Frequently Asked Questions=
__TOC__
===What does the board look like?===
[[images/PocketBeagle_Front_BW.jpg]]
[[images/PocketBeagle_Back_BW.jpg]]

===What is the board size?===
56mm x 35mm x 5mm

===What is a USB key-fob computer?===
PocketBeagle® is the size of a tiny mint-tin (35mm x 56mm x 5mm), less than half the size of the larger mint-tin or credit-card sized BeagleBone® Black (55mm x 86mm). Unlike a desktop computer where you connect a monitor, keyboard and mouse, PocketBeagle® is made to live inside your project and enables you to define its interfaces. PocketBeagle® is easily programmed through a web browser running on any other connected desktop.

===What can I do with PocketBeagle?===
Getting to the Linux command-line and text editor via your web browser is simple, providing you with a playground for programming and electronics. Exploring is made easy with several available libraries and tutorials and many more coming. Once you get a bit familiar with Linux and electronics, you are free to explore numerous more advanced projects from the community.

The sky is no limit; PocketBeagle makes a great starting point for building something as advanced as a computer for a CubeSat and there are several BeagleBone® Black examples out there already today. Flying a bit lower, PocketBeagle® is a good target for flight controller software, such as ArduPilot, similar to what is done on BeagleBone® Blue but with the flexibility of choosing all your own sensors and interconnects. Touching the ground, the combination of a 1-GHz Linux computer and 2 powerful 200-MHz hard-real-time shared-memory programmable real-time (PRU) microcontrollers makes driving robotic machines like 3D printers, CNC mills and laser cutters fast and simple with software such as Redeem, MachineKit or BeagleG as great starting points. If you’d like your ground-based machine to talk back to the cloud, the SPI, USB and UART expansion makes adding your own Ethernet, WiFi, Bluetooth and long-range wireless connectivity easy with Linux drivers and Node.JS or Python libraries to add smarts. If what you want is just fun, add a SPI-based display and run off of a single-cell LiPo battery to create your own custom gaming device with the sensors, such as cameras and software like OpenCV or just simple accelerometers, of your own choice to go on an adventure of your own.

===What are Programmable Real-Time Units (PRUs) anyway?===
Texas Instruments’ Sitara AM335x processor is built of several central processing units (CPUs), including two programmable real-time units (PRUs). These are 200MHz 32-bit microcontroller CPUs with a zero-depth pipeline and single-cycle access to a collection of pins and peripherals optimized for implementing software-defined peripherals. The PRUs don’t have pre-defined tasks in they system, so they are free to run your software. They are ideal for tight control loops; a must-have feature for building quadcopters, 3D printers and balancing robots, just to name a few.

PRUs are ideal for predictable low-latency, whereas the ARM processor is good for throughput. Latency is how quickly you can respond. Throughput is how quickly you can move once you reach top speed. When you need to handle a lot of little tasks, you need low latency and low overhead. When you have a large payload to process, you want good throughput. PocketBeagle® is designed to be good at both and efficient in enabling them to work together.

===What is the pinout for the expansion headers?===
[[images/PocketBeagle_pinout.png]]

===What is the price?===
BeagleBoard.org Foundation doesn't set pricing, but we expect it to be available at $25 through our major distributors.

===Is this open hardware and what is the design in?===
Yes, it is fully open hardware.

The production design was done in [https://github.com/beagleboard/pocketbeagle/tree/master/EAGLE EAGLE].

We also validated an implementation in [https://github.com/beagleboard/pocketbeagle/tree/master/KiCAD KiCAD].

We are in the process of completing the conversion to [https://upverter.com/Beagle/4178234c2cd6fe88/Pocket-Beagle---NEW/ Upverter], but have a couple of issues to clean up.

===What is the status of the software?===
It is possible to modify the bootloader, device tree and boot scripts on existing BeagleBone images and we are in the process of releasing an updated image ready to boot. However, we have big plans. This hardware release is just the start and expect the software experience to improve radically over the next few months. We'll be sharing development plans on https://beagleboard.org/discuss.