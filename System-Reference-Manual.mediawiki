[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PocketBeagle-size-compare-small.jpg|598x400px]]

'''PocketBeagle'''

'''System Reference Manual '''

'''Revision A.x (on-line wiki edition)'''

'''October 19, 2017'''

'''Maintaining author: Jason Kridner ''jkridner@beagleboard.org'''''

'''Contributing Editor: Cathy Wicks  ''cwicks@beagleboard.org'''''

'''THIS DOCUMENT '''

'''Terms'''
These design materials are *NOT SUPPORTED* and *DO NOT* constitute a reference design. Only “community” support is allowed via resources at [BeagleBoard.org/discuss](https://beagleboard.org/discuss).

THERE IS NO WARRANTY FOR THE DESIGN MATERIALS, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE DESIGN MATERIALS “AS IS” WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE DESIGN MATERIALS IS WITH YOU. SHOULD THE DESIGN MATERIALS PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

In other words, you may use the design materials as you choose and there is no license with regards to usage in the manufacturing process. We mean it, these design materials may be totally unsuitable for any purposes. Don't blame us!

As a general rule, we don't encourage use of this or other off-the-shelf single board computers in commercial products without engaging with a manufacturer to create a supplier agreement and make sure that you can get material as your business demands. Further, we do update the design on occasions where we find it necessary and won't guarantee a supply of older revisions, though we do seek periodic manufacturing of all of our boards for a period of roughly 10 years and will make design changes to replace obsolete parts and that may impact your usage. If you do opt to use it in a product, you take full responsibility for that product.

Do not use the BeagleBoard.org logo or trademarks (such as BeagleBoard, BeagleBone and PocketBeagle) on your products without a [logo license](https://beagleboard.org/logo) from the BeagleBoard.org Foundation, but feel free to reference BeagleBoard.org.

See the [LICENSE](https://github.com/beagleboard/pocketbeagle/blob/master/LICENSE) file regarding the copyright of these materials.

= '''1.0 Introduction ''' =

This document is the '''System Reference Manual''' for the PocketBeagle and covers its use and design. 
PocketBeagle is an ultra-tiny-yet-complete Linux-enabled, community-supported, open-source USB-key-fob-computer.  PocketBeagle featured an incredible low cost, slick design and simple usage, making it the ideal development board for beginners and professionals alike.  Simply develop directly in a web browser providing you with a playground for programming and electronics.  Exploring is made easy with several available libraries and tutorials with many more coming.  

PocketBeagle will boot directly from a microSD card.  A Chrome plug-in or cross-platform Node.JS Electron app can boot your board to add a Linux distribution to the card.  This means you can create reliably reproducible instructions on using the board, because it will behave the same way every time.  PocketBeagle runs GNU.Linux, so you can leverage many different high-level programming languages and a large body of drivers that that prevent you from needing to write a lot of your own software.  

This design is subject to change without notice as we will work to keep improving the design as the product matures based on feedback and experience. Software updates will be frequent and will be independent of the hardware revisions and as such not result in a change in the revision number.

Make sure you check the support Wiki frequently for the most up to date information.

[https://github.com/beagleboard/pocketbeagle/wiki ''github.com/beagleboard/pocketbeagle/wiki'' ]

= '''2.0 Change History ''' =

This section describes the change history of this document and board. Document changes are not always a result of a board change. A board change will always result in a document change.

=== 2.1 Document Change History  ===

'''Table 1. Change History '''

{|
!
'''Rev '''
!
'''Changes '''
!
'''Date '''
!
'''By '''
|-
|
PocketBone
|
OSH Park Project
|
April 18, 2016
|
MW
|-
|
A1
|
Preliminary
|
''February 14, 2017''
|
JK
|-
|
A2
|
Production
|
''September 11 2017''
|
JK
|-

=== 2.2 Board Changes  ===

==== 2.2.1 PocketBone  ====

<blockquote> JDK will provide what we want to say about the PocketBone and Rev A1 of the PocketBeagle 
* ''Information and credit the reference design from GSoC project https://oshpark.com/shared_projects/GWqtFu43''
this may be in the board revision chart or perhaps there is another way that this project should be referenced in the SRM as a preliminary write up paragraph and link to more details. - encourages community members regarding creativity. </blockquote>

==== 2.2.2 Rev A1  ====

* '' Changes from PocketBone to PocketBeagle ''

==== 2.2.3 Rev A2  ====

* '' Changes from A1 to A2 ''

= '''3.0 Connecting Up Your PocketBeagle ''' =

This section provides instructions on how to hook up your board. Two scenarios will be discussed:

# Tethered to a PC with local development
# Development over a network connection

=== 3.1 What’s In the Package  ===

In the package you will find two items as shown in '''Figure 1'''.

* PocketBeagle
* Getting Started instruction card with link to the support URL.

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/pocketbeagle_package_small_size.jpg]] [[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PB-card-front-1.jpg]][[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PB-card-back-1.jpg]]

'''Figure 1. In The Package '''

=== 3.2 Connecting the board ===

This section will describe how to connect the board for use. Information can also be found on the Quick Start Guide that came in the box. Detailed information is also available at
[https://beagleboard.org/getting-started ''beagleboard.org/getting-started'' ]

The board can be configured in several different ways, but we will discuss the two most common scenarios.

* Tethered to a PC via the USB cable with local development
** Board is accessed as a storage drive
* Connecting the PocketBeagle to a PC via USB cable and configuring to share access
** Board is accessed via the internet

=== 3.3 Tethered To A PC  ===

In this configuration, you will need the following additional items: 
* miniUSB to USB Type A Cable
* microSD card, 4K minimum

the board is powered by the PC via the USB cable--no other cables are required. The board is accessed either as a USB storage drive or via the browser on the PC. You need to use either Firefox or Chrome on the PC, IE will not work properly. '''Figure 2''' shows this configuration.

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/tethered bbb placeholder.jpg|299x200px]]

======  Figure 2. Tethered Configuration  ======

In some instances, such as when additional add-on boards, or capes are connected, the PC may not be able to supply sufficient power for the full system. In that case, review the power requirements for the add-on board/cape; additional power may need to be supplied via the 5v input, but rarely is this the case.

==== 3.3.1 Getting Started  ====

Follow along with the instructions at [https://beagleboard.org/getting-started ''beagleboard.org/getting-started'']

1. Download the latest image onto your computer at [https://bbb.io/latest ''bbb.io/latest'']

Follow the link to the latest image and click on the Debian image for Stretch IoT (non-GUI) for BeagleBone and PocketBeagle via microSD card.  This will download a .img.xz file into the download folder of your computer.
<blockquote>Photo of the getting started page</blockquote>

2. Transfer the image to a microSD card

Download and install an SD card programming utility.  We like [https://etcher.io/ ''https://etcher.io/''] 
Insert a new microSD card into a card reader/writer and attach it via the USB connection to your computer.  Follow the instructions on the screen for burning the image from your computer to the microSD card.  Eject the SD card reader when prompted and remove the card.
<blockquote> Include a photo of the getting started page about burning</blockquote>
<blockquote> Include a photo of a microSD in a SD card writer</blockquote>

3. Insert the microSD card into the board - you'll hear a satisfying click when it seats properly into the slot.  It is important that your microSD card is fully inserted prior to powering the system.

<blockquote>Include hardware photo</blockquote>

4. Connect the small connector on the USB cable to the board as shown in '''Figure x'''.

<blockquote>photo here similar to the BBB one </blockquote>

======  Figure 3. USB Connection to the Board  ======

5. Connect the large connector of the USB cable to your Linux, Mac or Windows PC USB port.  The board will power on and the power LED will be on as shown in '''Figure 4''' below.
<blockquote>photo here similar to the BBB one </blockquote> 
======  Figure 4. Board Power LED  ======

6. As soon as you apply power, the board will begin the booting process and the LEDs will come on in sequence as shown in '''Figure 5''' below. It will take a few seconds for the status LEDs to come on, so be patient. The LEDs will be flashing as it begins to boot the Linux kernel.  While the four user LEDS can be over written and used as desired, they do have specific meanings in the image that you've initially placed on your microSD card once the Linux kernel has booted. 

* '''USER0''' is the heartbeat indicator from the Linux kernel.
* '''USER1''' turns on when the microSD card is being accessed
* '''USER2''' is an activity indicator. It turns on when the kernel is not in the idle loop.
* '''USER3''' idle
<blockquote>photo here similar to the BBB one </blockquote> [[media/image11.jpg|541x254px]]

======  Figure 5. Board Boot Status  ======

==== 3.3.2 Accessing the Board as a Storage Drive  ====

The board will appear as a USB Storage drive on your PC after the kernel has booted, which will take approximately 10 seconds. The kernel on the board needs to boot before the port gets enumerated. Once the board appears as a storage drive, do the following:

# Open the USB Drive folder.
# Click on the file named '''START.HTM'''
# The file will be opened by your browser on the PC and you should get a display showing the Quick Start Guide.
# Your board is now operational! Follow the instructions on your computer screen.

==== 3.3.3  A Booted System ====

<blockquote> Option for the Networked system - what do the users see on the screen? </blockquote>

====== Figure 16. Desktop Screen  ======

==== 3.3.4  Powering Down ====

1. Standard Power Down: Press the power button momentarily with a tap. The system will power down automatically. This will shut down your software with grace.  Software routines will run to completion.  

2. Hard Power Down:  Press the power button for 10 seconds.  This will force an immediate shut down of the software.  For example you may lose any items you have written to the memory.  Holding the button longer than 10 seconds will perform a power reset and the system will power back on.

3. Remove the USB cable.  Remember to hold your board firmly at the USB connection while you remove the cable to prevent damage to the USB connector.

=== 3.4 Development Over a Network Connection  ===

Many host computers support tethering.  In this configuration, the board can be accessed via a shared connection to the internet with any computer. It allows you to create your code remotely and to make the board do whatever you need it to do from a remote location. This can also make it fun and easy to share projects running on one PocketBeagle.  

======  Figure 6. Network Connected PocketBeagle  ======

==== 3.4.1 Getting Started with a Networked PocketBeagle  ====

Follow all instructions above in Section 3.3 above.

Useful instructions:
https://www.digikey.com/en/maker/blogs/cdf66181b3a5436e9ad730e4ed4cf9ee

==== 3.4.2 Connecting Up the Board  ====

Next, configure your host to utilize tethering then use the virtual serial port to configure your PocketBeagle to acquire networking information from your host rather than providing it to your host. 

[https://github.com/beagleboard/pocketbeagle/wiki ''github.com/beagleboard/pocketbeagle/wiki'' ]

See the [https://groups.google.com/forum/?utm_medium=email&utm_source=footer#!msg/beagleboard/JtOGZb-FH2A/9GVu7I6kAQAJ ''on-line discussion.'']
<blockquote>  We will need additional software notes, a picture of the screen, steps for a typical case pc </blockquote>
check here https://www.digikey.com/en/maker/blogs/cdf66181b3a5436e9ad730e4ed4cf9ee
=== 3.5 Other ways to connect your PocketBeagle  ===

Cathy's notes:
We need to highlight the cloud9 IDE way - equate to how an Arduino user comes at the development relationship.

Also - notes from Jason - likely these should be handled in a different section - section 5?

Method 4)The microUSB connector will act as a USB host. If using a USB-WiFi adapter, you'll need to configure connman to connect to your network initially, then reboot using the USB as a host rather than a client. You'll need to provide power to your board, but microUSB Host/OTG cables sometimes include the power input.
5)Adding the extra USB via the header - look at the pocketbeagle FAQ
It is possible to add an additional USB port as described above.
6)You can utilize a mikroBUS Click Ethernet or wireless module.
7) There are many ways to utilize the expansion interface to create your own networking solution.

= '''4.0 PocketBeagle Overview ''' =
<blockquote>  THE VALUE OF THIS SECTION IS BASICALLY A "WALK AROUND THE BOARD" to tell a new user in chart form and in diagram form what is on the board in front of them from a physical component perspective </blockquote>
PocketBeagle is built around Octavo Systems' System-In-Package that integrates a high-performance Texas Instruments AM3358 processor, 512MB of DDR3, power management, nonvolatile serial memory and over 140 passive components into a single package.  This integration saves cost and a small amount of power by eliminating several packages that would otherwise need to be placed on the board, but more notably it saves space of all those packages and simplifies our board design so we can focus on the user experience.   

It also offers access through the expansion headers to many of the interfaces and allows for the use of add-on boards called capes and click boards, to add many different combinations of features. A user may also develop their own board or add their own circuitry.

PocketBeagle is manufactured and warranted by partners listed at https://beagleboard.org/logo for the benefit of the community and its supporters.  The board is designed by x and is based on y  The PCB layout was done by xyz  The software is written and maintained by....  invite new users to join in contributing... </blockquote>(Perhaps this paragraph belongs in section 1 or even 2)</blockquote>

=== 4.1 PocketBeagle Features and Specification  ===

This section covers the specifications and features of the board in a chart and provides a high level description of the major components and interfaces that make up the board.

'''Table 2.  PocketBeagle Features'''

{| {{table}}
| align="center" style="background:#f0f0f0;"|'''Feature'''
| align="center" style="background:#f0f0f0;"|''''''
|-
| System-In-Package||Octavo Systems OSD335x-SM in 256 Ball BGA (21mm x 21mm)
|-
| SiP Incorporates : ||
|-
| Processor||Texas Instruments 1GHz Sitara™ AM3358 ARM® Cortex®-A8 with NEON floating-point accelerator
|-
| Graphics Engine||Imagination Technologies PowerVR SGX530 Graphics Accelerator
|-
| Real-Time Units||2x programmable real-time unit (PRU) 32-bit 200MHz microcontrollers with single-cycle I/O latency
|-
| Coprocessor||ARM® Cortex®-M3 for power and security management functions
|-
| SDRAM Memory||512MB DDR3 800MHz RAM
|-
| Non-Volatile Memory||4KB I2C EEPROM 
|-
| Power Management||TPS65217C PMIC along with TL5209 LDO to provide power to the system with integrated 1-cell LiPo battery support
|-
| Connectivity :||
|-
| SD/MMC||Bootable microSD card slot
|-
| USB||High speed USB 2.0 OTG (host/client) micro-B connector
|-
| Debug Support||JTAG test points and gdb/other monitor-mode debug possible
|-
| Power Source||microUSB connector, also expansion header options (battery, VIN or USB-VIN)
|-
| User I/O||Power Button with press detection interrupt via TPS65217C PMIC
|-
| Expansion Header : ||
|-
| USB||High speed USB 2.0 OTG (host/client) control signals
|-
| Analog Inputs||8 analog inputs with 6 @ 1.8V and 2 @ 3.3V along with 1.8V references
|-
| Digital I/O||44 digital GPIOs accessible with 18 enabled by default including 2 shared with the 3.3V analog input pins
|-
| UART||3 UARTs accessible with 2 enabled by default
|-
| I2C||2 I2C busses enabled by default
|-
| SPI||2 SPI busseswith single chip selects enabled by default
|-
| PWM||4 Pulse Width Modulation outputs accessible with 2 enabled by default
|-
| QIE||2 Quadrature encoder inputs accessible
|-
| CAN||2 CAN bus controllers accessible
|-
| 
|}

==== 4.1.1 OSD3358-512M-BSM System in Package ====
The Octavo Systems OSD3358-512M-BSM System-In-Package includes:

<blockquote>'''Placeholder for description of OSD3358 etc and links '''</blockquote>
AM3358, 512MB DDR3L, 4KB EEPROM, 
TPS65217C, TL5209, xyz quantity of Passives - 
21mm X 21mm, 256 Ball BGA, 0°C to 85°C

BLOCK DIAGRAM OF THE SIP

=== 4.2 Board Component Locations  ===

This section describes the key components on the board, their location and function. 

'''Figure xx''' below shows the locations of the devices, connectors, LEDs, and switches on the PCB layout of the board.

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PB-walkaround-3.jpg]]

======= Figure xx. Key Board Component Locations  =======

'''Key Components'''

* '''The Octavo Systems OSD3358-512M-BSM System-In-Package''' is the processor for the board.
** AM3358 ARM Cortex A8 Processor from Texas Instruments
** 512MB DDR3L  (additional spec info)
** 4KB EEPROM (additional spec info)
** TPS65217C from which chip mfr
** TL5209 from which chip mfr
** xyz quantity of Passives which xyz

* '''microUSB host/client''' is a microUSB connection to a PC that can also power the board.
* '''Power BUTTON''' can be used to force a boot from the microSD card if the power is cycled on the board, removing power and reapplying the power to the board..
* There are four blue '''LED'''S that can be used by the user.
* '''microSD''' slot is where a microSD card can be installed.
* '''USB Host''' can be connected different USB interfaces such as Wi-Fi, BT, Keyboard, etc.



 === 4.3 BeagleBone Black Compatibility  ===

<blockquote> important to have a chart and section telling users which header pins on BeagleBone Black are available and where on the PocketBeagle.  Include a full pin list. not sure this should be here, perhaps later in the section about the headers. </blockquote>

<blockquote>'''This is a section about any hardware/software board compatibility between PocketBeagle and BeagleBone Black.  Is this an opportunity to highlight that projects previously developed for BeagleBone Black can be easily ported to PocketBeagle for xyz ...'''  </blockquote>


= '''5.0 PocketBeagle High Level Specification ''' =

This section provides the high level specification of the PocketBeagle.

=== 5.1 Block Diagram  ===

'''Figure 19''' below is the high level block diagram of the PocketBeagle.

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PB-block-diag2.jpg]]

'''Figure 19. PocketBeagle Key Components '''

=== 5.2 System in Package (SiP)  ===

Details here for SiP specification - The ODS335x-SM Block Diagram and links to appropriate details on the website

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/OSD335x-color-block.jpg]]

'''Figure 20. OSD335x SIP Block Diagram '''

=== 5.3 Connectivity  ===

==== 5.3.1 MicroSD Connector  ====

The board is equipped with a single microSD connector to act as the primary boot source for the board.  The connector will support larger capacity microSD cards. Just about any microSD card you have will work, the install takes less than 2.0G of the memory.

When plugging in the SD card, the writing on the card should be up. Align the card with the connector and push to insert. Then release. There should be a click and the card will start to eject slightly, but it then should latch into the connector. To eject the card, push the SD card in and then remove your finger. The SD card will be ejected from the connector.

Do not pull the SD card out or you could damage the connector.

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PB-microSDphoto.jpg]]
====== Figure 21. microSD Connector  ======




==== 5.3.2 USB 2.0 Connector  ====

The board has a miniUSB connector that connects the USB0 port to the SiP.
[[media/image71.jpg|593x387px]]

====== Figure 53. USB Host Connector  ======

The port is USB 2.0 HS compatible and can supply up to 500mA of current. If more current or ports is needed, then a HUB can be used.

=== 7.3 USB   ===

<blockquote> Here is a paragraph about the USB and the Electrical layout of the circuit. </blockquote> 

[[media/image71.jpg|633x454px]]

This port is a USB Client and host interface and is primarily used for connection to a PC.

====== Figure 53. USB Host Connector  ======

The port is USB 2.0 HS compatible and can supply up to 500mA of current. If more current or ports is needed, then a HUB can be used.

==== 5.3.5 Boot Modes  ====

There are three boot modes:  <blockquote> how much of this section is appropriate </blockquote>

* '''SD Boot…''' microSD connector to act as the primary boot source for the board.
* '''Serial Boot…'''This mode will use the serial port to allow downloading of the software direct. A separate USB to serial cable is required to use this port.
* '''USB Boot…'''This mode supports booting over the USB port.

'''''Software to support USB and serial boot modes is not provided by beagleboard.org.'' ''Please contact TI for support of this feature.'' '''  <blockquote> where on the TI website (TI Linux SDK?) should we send them and is it supported for the PocketBeagle </blockquote>

A switch is provided to allow switching between the modes. <blockquote> need engineering review of this section</blockquote>

* Holding the boot switch down during a removal and reapplication of power without a microSD card inserted will force the boot source to be the USB port and if nothing is detected on the USB client port, it will go to the serial port for download.
* Without holding the switch, the board will boot try to boot from the eMMC. If it is empty, then it will try booting from the microSD slot, followed by the serial port, and then the USB port.
* If you hold the boot switch down during the removal and reapplication of power to the board, and you have a microSD card inserted with a bootable image, the board will boot from the microSD card.

'''''NOTE: Pressing the RESET button on the board will NOT result in a change of the'' ''boot mode. You MUST remove power and reapply power to change the boot mode.'' ''The boot pins are sampled during power on reset from the PMIC to the processor.'' ''The reset button on the board is a warm reset only and will not force a boot mode'' ''change.'' '''

<blockquote>Editors note - we have a good section on the Octavo Systems website in the Tutorials that discusses the power button behavior - go to https://octavosystems.com/app_notes/osd335x-design-tutorial/bare-minimum-boot/power-management/ and scroll down to "Power Button"</blockquote>

=== 5.4 Power Management  ===

<blockquote> Editors note: since the BBBlack had an external PMIC, this section existed.  We could incorporate a mention of power management in the specification section above in section 4 or 5 of the SiP and go into more detail of power mgmt in the power section coming up. </blockquote>



=== 5.6 Serial Debug Port  ===

<blockquote> pins 30/32 on the header - is this something to highlight </blockquote> 

Serial debug is provided via UART0 on the processor via a single 1x6 pin header. In order to use the interface a USB to TTL adapter will be required. The header is compatible with the one provided by FTDI and can be purchased for about $12 to $20 from various sources. Signals supported are TX and RX. None of the handshake signals are supported.


=== 5.8 Power Sources  ===

The board can be powered from three different sources:

* A USB port on a PC
* A power supply with a USB connector.
* Expansion connectors - 
** include utilizing to hook up a battery.

<blockquote>need to include more information regarding the  use of a battery as this is a key feature.  </blockquote>

<blockquote> need engineering review </blockquote> '''This port is limited to 500mA by the Power Management IC. It is possible to change the settings in the '''TPS65217C''' to increase this current, but only after the initial boot. And, at that point the PC most likely will complain, but you can also use a dual connector USB cable to the PC to get to 1A.'''

Power routed to the board via the expansion header could be provided from power derived on a cape. The DC supply should be well regulated and 5V +/-.25V.

=== 5.10 Power Button  ===

<blockquote> some of this is already covered in section 3 </blockquote>

A power button is provided near the reset button close to the Ethernet connector. This button takes advantage of the input to the PMIC for power down features. While a lot of capes have a button, it was decided to add this feature to the board to ensure everyone had access to some new features. These features include:

* Interrupt is sent to the processor to facilitate an orderly shutdown to save files and to un-mount drives.
* Provides ability to let processor put board into a sleep mode to save power.
* Can alert processor to wake up from sleep mode and restore state before sleep was entered.

If you hold the button down longer than 8 seconds, the board will power off if you release the button when the power LED turns off. If you continue to hold it, the board will power back up completing a power cycle.

'''''''We recommend that you use this method to power down the board. It will also help prevent contamination of the SD card '''''''

If you do not remove the power jack, you can press the button again and the board will power up.

=== 5.11 Indicators  ===

There are a total of five blue LEDs on the board.

* One blue power LED indicates that power is applied and the power management IC is up. If this LED flashes when applying power, it means that an excess current flow was detected and the PMIC has shut down.
* Four blue LEDs that can be controlled via the SW by setting GPIO pins.


=== 5.12 CTI JTAG Header  ===

UPDATE THIS DESCRIPTION TO HIGHLIGHT THE PADS: A place for an optional 20 pin CTI JTAG header is provided on the board to facilitate the SW development and debugging of the board by using various JTAG emulators. This header is not supplied standard on the board. To use this, a connector will need to be soldered onto the board.

If you need the JTAG connector you can solder it on yourself. No other components are needed. The connector is made by Samtec and the part number is FTR-110-03-G-D-06. You can purchase it from [http://www.digikey.com/ ''www.digikey.com''.]

Is there an example done by a competing board on these PADs.

=== 5.14 Cape Board AND CLICK BOARD Support  ===

The PocketBeagle has the ability to accept up to xyz # of  expansion boards or capes that can be stacked onto the expansion headers. The word cape comes from the add-on board shape of the boards that fit onto the original BeagleBone series. (link to story)

For more information on cape support refer to ''Section 9.0''.

= '''6.0 Detailed Hardware Design ''' =
<blockquote> I'd really like the header section to come before this one </blockquote>

The following sections describe the hardware design of the PocketBeagle.
=== 6.x  MicroSD Connection ===

Some words about the microSD connector design on the board here.

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/usdconnector-sch.png]]

====== Figure 22. microSD Connections  ======
=== 6.y USB Connector ===


= '''7.0 Connectors ''' =
<blockquote> we will have a chart and pics of the diagrams on the connectors <blockquote>
This section describes each of the connectors on the board.



=== 7.1 Expansion Connectors  ===

The expansion interface on the board is comprised of two 46 pin connectors. All signals on the expansion headers are '''''3.3V''''' unless otherwise indicated.

'''''NOTE: Do not connect 5V logic level signals to these pins or the board will be'' ''damaged.'' '''

'''NOTE: DO NOT APPLY VOLTAGE TO ANY I/O PIN WHEN POWER IS NOT SUPPLIED TO THE BOARD. IT WILL DAMAGE THE PROCESSOR AND VOID THE WARRANTY. '''

'''NO PINS ARE TO BE DRIVEN UNTIL AFTER THE SYS_RESET LINE GOES HIGH. '''

'''Figure 50''' shows the location of the expansion connectors.
[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PocketBeagle_pinout.png]]
====== Figure 50. Expansion Connector Location  ======

=== 7.1.1 P1 Header  ===
<blockquote> Place the electrical spec of the P1 Header here and also a more detailed chart of the PINOUT </blockquote>

=== 7.1.1 P2 Header  ===

<blockquote> Place the electrical spec of the P1 Header here and also a more detailed chart of the PINOUT </blockquote>

=== 7.3 USB   ===
=== 5.7 USB1 Host Port  ===

<blockquote> this is on the header </blockquote>
On the board is a single USB Type A female connector with full LS/FS/HS Host support that connects to USB1 on the processor. The port can provide power on/off control and up to 500mA of current at 5V. Under USB power, the board will not be able to supply the full 500mA, but should be sufficient to supply enough current for a lower power USB device supplying power between 50 to 100mA.

You can use a wireless keyboard/mouse configuration or you can add a HUB for standard keyboard and mouse interfacing.
<blockquote> Here is a paragraph about the USB and the Electrical layout of the circuit. </blockquote> 

[[media/image71.jpg|633x454px]]

This port is a USB Client and host interface and is primarily used for connection to a PC.

=== 7.4 Setting up an additional USB connection ===

<blockquote> Reference the example already completed on the FAQ for adding a USB connection </blockquote>



=== 7.5 Serial connection through the pin on the header  ===

details on how to connect and boot through Serial

[[media/image71.jpg|527x351px]]

====== Figure 54. Serial Debug through pins on the header ======

Two signals are provided, TX and RX on this connector. The levels on these signals are 3.3V. In order to access these signals, a FTDI USB to Serial cable is recommended as shown in '''Figure 55''' below.

[[media/image73.jpg|428x162px]]

The cable can be purchased from several different places and must be the 3.3V version TTL-232R-3V3. Information on the cable itself can be found direct from FTDI at:

[http://www.ftdichip.com/Support/Documents/DataSheets/Cables/DS_TTL-232R_CABLES.pdf ''http://www.ftdichip.com/Support/Documents/DataSheets/Cables/DS_TTL232R_CABLES.pdf'' ]

Pin 1 of the cable is the black wire. That must align with the pin 1 on the board which is designated by the white dot next to the connector on the board.

Refer to the support WIKI [http://elinux.org/BeagleBoneBlack ''http://elinux.org/BeagleBoneBlack''] for more sources of this cable and other options that will work.

Table is the pinout of the connector as reflected in the schematic. It is the same as the

FTDI cable which can be found at

[http://www.ftdichip.com/Support/Documents/DataSheets/Cables/DS_TTL-232R_CABLES.pdf ''http://www.ftdichip.com/Support/Documents/DataSheets/Cables/DS_TTL-232R_CABLES.pdf'']

with the exception that only three pins are used on the board. The pin numbers are defined in '''Table 14'''. The signals are from the perspective of the board.

======  Table 14. J1 Serial Header Pins  ======

{|
! PIN NUMBER
! SIGNAL
|-
|
'''1 '''
|
Ground
|-
|
'''4 '''
|
Receive
|-
|
'''5 '''
|
Transmit
|}

'''Figure 56''' shows the pin location on the board.

[[media/image75.jpg|373x374px]]

'''Figure 56. Serial Header '''



=== 7.9 JTAG PADs and circuitry  ===

A place for an optional 20 pin CTI JTAG header is provided on the board to facilitate the SW development and debugging of the board by using various JTAG emulators. This header is not supplied standard on the board. To use this, a connector will need to be soldered onto the board.

If you need the JTAG connector you can solder it on yourself. No other components are needed. The connector is made by Samtec and the part number is FTR-110-03-G-D-06. You can purchase it from [http://www.digikey.com/ ''www.digikey.com''.]

= '''8.0 Cape Board and Click Board Support ''' =
<blockquote> Need a whole section here on Using the Headers for various pins and CLICK Boards also</blockquote>

[[https://github.com/jadonk/pocketbeagle-wiki/blob/master/images/PocketBeagle_pinout.png]]

=== 9.1 Detailed section of the functions below  ===



* System/software sections in SRM regarding usage of:
- GPIO (LEDs https://gist.github.com/jadonk/d740c45b04bf0298da03075327c38d60, GPIOs pretty good example https://falsinsoft.blogspot.com/2012/11/access-gpio-from-linux-user-space.html, my favorite, but requiring some better background: https://github.com/beagleboard/beaglebone-blue/wiki/One-Liner-Module-Tests#GP0)
- SPI with special added section on LCDs
- I2C
- UART including enabling/disabling consoles and mikrobus power impacts
- PRU with and without RPMsg and mmap
- pinmux helpers
- CAN
- USB host, client and power control

=== 8.2 Click Board circuitry and using them  =

= '''9.0 PocketBeagle Mechanical ''' =

=== 9.1 Dimensions and Weight  ===

Editors note : this is only a placeholder

Size: 3.5” x 2.15” (86.36mm x 53.34mm)

Max height: .187” (4.76mm)

PCB Layers: 4

PCB thickness: .062” 

RoHS Compliant: Yes

Weight: 1.4 oz

=== 9.2 Silkscreen and Component Locations  ===

[[media/image88.jpg|530x782px]]

====== Figure 71. Board Dimensions  ======

[[media/image89.jpg|493x818px]]

====== Figure 72. Component Side Silkscreen  ======

[[media/image90.jpg|501x772px]]

'''Figure 73. Circuit Side Silkscreen '''

= '''10.0 Pictures ''' =

[[media/image91.jpg|476x768px]]

'''Figure 74. Top Side '''

[[media/image92.jpg|486x764px]]

'''Figure 75. Bottom Side '''

= '''11.0 Support Information ''' =

All support for this design is through the BeagleBoard.org community at:

''beagleboard@googlegroups.com'' or

[http://beagleboard.org/discuss ''http://beagleboard.org/discuss''] .

=== 11.1 Hardware Design  ===

Design documentation can be found on the wiki. <blockquote> need a URL here </blockquote>
Including:

* Schematic in PDF
* Schematic in OrCAD (Cadence Design Entry CIS 16.3)
* PCB Gerber
* PCB Layout (Allegro)
* Bill of Material
* System Reference Manual (This document).

=== 11.2 Software Updates  ===

It is a good idea to always use the latest software. Instructions for how to update your software to the latest version can be found at:

Download the latest software files from [https://beagleboard.org/latest-images ''beagleboard.org/latest-images'']


=== 11.3 RMA Support  ===

If you feel your board is defective or has issues, request an RMA by filling out the form at [http://beagleboard.org/support/rma ''http://beagleboard.org/support/rma''] . You will need the serial number and revision of the board. The serial numbers and revisions keep moving. Different boards can have different locations depending on when they were made. The following figures show the three locations of the serial and revision number.

[[media/image93.jpg|518x308px]]

====== Figure 76. Initial Serial Number and Revision Locations  ======

[[media/image94.jpg|518x230px]]

====== Figure 77. Second Phase Serial Number and Revision Location  ======

[[media/image95.jpg|575x222px]]

'''Figure 78. Third Phase Serial Number and Revision Location '''

== 11.4.7 Getting Help  ==

If you need some up to date troubleshooting techniques, we have a Wiki set up at [https://github.com/beagleboard/pocketbeagle/wiki ''https://github.com/beagleboard/pocketbeagle/wiki'' ]

